plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply plugin: 'com.ray.router'

router {
    wikiDir getProjectDir().absolutePath
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.ray.rayrouter"
        minSdkVersion versions.minSdkVersion as int
        targetSdkVersion versions.minSdkVersion as int
        versionCode versions.versionCode as int
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'test'
            keyPassword '123456'
            storeFile file('../../../test.key')
            storePassword '123456'
        }
    }

    buildTypes {

        debug {
            buildConfigField("String", "BUILD_TIME", "\"${System.currentTimeMillis()}\"")
            resValue("string", "hello", "hello")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField("String", "BUILD_TIME", "\"${System.currentTimeMillis()}\"")
            resValue("string", "hello", "hello")
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions('size', 'material')

    productFlavors {

        small {
            dimension = 'size'
        }

        big {
            dimension = 'size'
        }

        egg {
            dimension = 'material'
        }

        beef {
            dimension = 'material'
        }

    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name == 'release') {
                def fileName = "RouterDemo_" +
                        "${variant.productFlavors[0].name}_${variant.productFlavors[1].name}_" +
                        "${defaultConfig.versionName}.apk"
                output.outputFileName = fileName
            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(':router-annotations')
    kapt(project(':router-processor'))
    implementation project(':biz-reading')
    implementation project(':router-runtime')
}

Properties properties = new Properties()
properties.load(rootProject.file('local.properties').newDataInputStream())
println("test userName = ${properties.get('userName')}")
println("test userPassword = ${properties.get('userPassword')}")